**************************** SOLUCION HILOS PIZZERIA **************************************
    RECUERDA CAMBIAR NOMBRE DE VARIABLES Y ASPECTO

    public class Telepizza {
    public static void main(String[] args) {
        ColaPizzas cola = new ColaPizzas();
        Pizzeria pizzeria = new Pizzeria(cola, 30);
        
        
        Motorista[] motoristas = new Motorista[5];
        for (int i = 0; i < motoristas.length; i++) {
            motoristas[i] = new Motorista(cola, i + 1);
            motoristas[i].start();
        }
        pizzeria.start();
    }
}


class Motorista extends Thread {
    private ColaPizzas cola;
    private int id;
    private static int numerocargas = 6;

    Motorista(ColaPizzas cola, int id) {
        this.cola = cola;
        this.id = id;
    }

     @Override
    public void run() {
        int i = 0;

        while (i < numerocargas) {
            int pizza = cola.recogerPizza();
            System.out.println("Motorista " + id + " recoge pizza: " + pizza);
            i++;
        }

        System.out.println("Motorista " + id + " sale a repartir");

    }
}


class Pizzeria extends Thread {
    private ColaPizzas cola;
    private int totalPizzas;

    Pizzeria(ColaPizzas cola, int totalPizzas) {
        this.cola = cola;
        this.totalPizzas = totalPizzas;
    }

    @Override
    public void run() {
        for (int i = 1; i <= totalPizzas; i++) {
            cola.cocinarPizza(Integer.toString(i));
            try {
                sleep(1000);
            } catch (Exception e) {
            }
        }
    }
}



class ColaPizzas {
    private boolean haypizza = false;
    
    private int pizzasRecogidasGlobales = 0;

    synchronized void cocinarPizza(String pizza) {
        while (haypizza) {
            try {
                wait();
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }
        haypizza = true;  // Marcar que hay una pizza cocinada
        System.out.println("Pizza " + pizza + " en cola para reparto");
        notifyAll();
    }

    synchronized int recogerPizza() {
        while (!haypizza) {
            try {
                wait();
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
        }
        haypizza = false;  // Marcar que la pizza ha sido recogida
        pizzasRecogidasGlobales++;
        notifyAll();
        return pizzasRecogidasGlobales;
    }
}
